Declaratividad: Se delega lo que quiero con como quiero. Se separa la parte algoritmica con lo que. Se delego la lagoritmica al motor.
Imperatividad: lo contrario a lo declarativo.
Reduccion: la funcion es cada vez mas basica, mas chica etc.
Expresividad: El codigo se puede leer y entender lo que se esta haciendo. (no hace falta comentarios si el codigo se lee en si)
Efecto colateral: Cambio que hago dentrod e una funcion y luego se ve reflejado luego que la funcion termina. el cambio sobrevive a
Transparencia referencial: Si tengo f de un valor siempre esta asociado al mismo valor siempre se mantiene el valor resultante. Si yo ejetuto algo me da siempre lo mismo (consecuencia)
Acoplamiento: 2 componentes de mi programa pueden depender en mayor o menor medida uno del otro (>acomplamiento significa: <acomplamiento significa) Preferimos que sea 
bajo para que se mantengan los componentes de forma independiente.
Guardas: Permiten dar distintas definiciones de una funcion bajo distintas condiciones. (asociado a uncion x ramas)
Composicion: Forma de armar una funcion nueva que equivale a una secuencia de funciones.
Recursividad: Es una funcion que se define en funcion de si misma. (las listas son recursivas)
Pattern Matchin: Tener una definicion en partes y dependiendo de la forma que tiene los parametros podemos definir una funcion aplicable a la lista vacia en una definicion. depende de que parametro le estoy pasando. es un caso en el cual me restrinjo con algo.)
Aplicacion Parcial: Pasarle a una funcion menos parametros para poder generar una nueva funcion. La sintaxis de HK nos permite pasar alguno de los parametros, y me queda una nueva funcion que recibe el que le falta a la nueva funcion.
Estructuras de datos: 
Listas: Data - Record sintax: tuplas: Type: dar un nombre de datos y darle seria una estructura.
Evaluacion diferida: solo se evalua si hace, falta. Esta escrita pero no forma parte de mi respuesta (no se evsalua). / Solo lo suficiente es lo que se evalua, si no se utiliza algo no se evalua directamente 
/Una unica vez es lo que se evalua, se relaciona con transparencia referencial. Se evalua auna sola vez y siempre se que tengo el mismo resultado.